1. Создать C:\Users\Mvmir\go\src\github.com\Mvmir\go2\Slovarik

2. go mod init 
    . C:\Users\Mvmir\go\src\github.com\Mvmir\go2\Slovarik>
    Доступ будет не только локально
    ( если есть каталог cmd ТО -> /cd Slovarik
    C:\Users\Mvmir\go\src\github.com\Mvmir\go2\StandartWebServer>go mod init github.com/Mvmir/go2/Slovarik
2.1 При копировании умирают пути, переустановить связи библиотек
   /////Ps 
               go get -u github.com/gorilla/mux
               go get -u github.com/joho/godotenv
    Мои пакеты тоже исправить путь
               github.com/Mvmir/go2/

```
usefull
Стандарты составления пакетов и вообще
 https://github.com/golang-standards/project-layout

3. main.go
C:\Users\Mvmir\go\src\github.com\Mvmir\go2\StandartWebServer\cmd\api
create main.go

4. (cmd) build struct command
C:\Users\Mvmir\go\src\github.com\Mvmir\go2\StandartWebServer>go build -v ./cmd/api/
(создаст api.exe)
(cmd) run api.exe
      api
C:\Users\Mvmir\go\src\github.com\Mvmir\go2\slovarik>api

5. api.go
C:\Users\Mvmir\go\src\github.com\Mvmir\go2\slovarik\internal\app\api
create api.go

6. Создать папку configs and files .env , api.toml

6.1 скачать пакет томл
C:\Users\Mvmir\go\src\github.com\Mvmir\go2\slovarik>go get github.com/BurntSushi/toml

C:\Users\Mvmir\go\src\github.com\Mvmir\go2\slovarik>go get -u github.com/BurntSushi/toml
где -u обновить версию пакета томл

6.1.1 Go build 
C:\Users\Mvmir\go\src\github.com\Mvmir\go2\slovarik>go build -v ./cmd/api/

6.1.2 run
C:\Users\Mvmir\go\src\github.com\Mvmir\go2\slovarik>api

6.2 flag.Stringvar - настройки конфиг
flag.Parse() запускает выполнение этих настроек
6.2 при запуске передать настройки с файла томл

C:\Users\Mvmir\go\src\github.com\Mvmir\go2\slovarik>api -path configs/api.toml

C:\Users\Mvmir\go\src\github.com\Mvmir\go2\slovarik>api -help

C:\Users\Mvmir\go\src\github.com\Mvmir\go2\slovarik\cmd\api
//////////////////Сменить каталог cmd
CD C:\Users\Mvmir\go\src\github.com\Mvmir\go2\slovarik
//////////

7. Как конфиги передавать?
Хочется запускать :
```
api.exe -path configs/api.toml
```
Установить библиотеку для отправки логов на разные серверы
C:\Users\Mvmir\go\src\github.com\Mvmir\go2\slovarik>go get -u github.com/sirupsen/logrus
--Добавить api logger logrus
api.toml - Можно менять порт и уровень логирования ошибок

### Шаг 8. Конфигурация http сервера
Библиотека роутера
C:\Users\Mvmir\go\src\github.com\Mvmir\go2\slovarik>go get -u github.com/gorilla/mux

http://localhost:8080/
Hello! This is rest api!


go get -u github.com/gorilla/mux
```

### В дз на потом
Установить makefile +
gnuwin32.sourceforge.net/packages/make.htm
Прописать в puth путь до make.exe
```
Добавить в ```makefile```
* go build -v ./cmd/api/
+

Хочется, чтобы была возможность запускать наше приложение как с ```.toml``` файлом, так и с ```.env```
Добавить в код необходимые блоки, для того, чтобы можно было запускать приложение следующими командами:
* Должна быть возможность запускать проект с конфигами в ```.toml```
```
api -format .env -path configs/.env
```
* Должна быть возможность запускать проект с конфигами в ```.env```
```
api -format .toml -path configs/api.toml
```
* Должна быть возможность запускать проект с дефолтными параметрами (дефолтным будем считать ```api.toml```, если его нет, то запускаем с значениями из структуры ```Config```)
```
api


